{
  "swagger": "2.0",
  "info": {
    "title": "Sample CRUD APIs",
    "version": "v0.1.0",
    "contact": {
      "email": "kzirtm@gmail.com"
    }
  },
  "tags": [
    {
      "name": "TodoService"
    }
  ],
  "host": "http://localhost:6999",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/todo": {
      "get": {
        "summary": "ListTodo RPC retrieves a list of Todo objects.",
        "operationId": "TodoService_ListTodo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTodoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TODO_STATUS_UNSPECIFIED",
              "TODO_STATUS_PENDING",
              "TODO_STATUS_IN_PROGRESS",
              "TODO_STATUS_DONE",
              "TODO_STATUS_DELETED",
              "TODO_STATUS_ABANDONED"
            ],
            "default": "TODO_STATUS_UNSPECIFIED"
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TodoService"
        ]
      },
      "post": {
        "summary": "CreateTodo RPC creates a new Todo object.",
        "operationId": "TodoService_CreateTodo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateTodoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateTodoRequest"
            }
          }
        ],
        "tags": [
          "TodoService"
        ]
      }
    },
    "/api/v1/todo/{id}": {
      "get": {
        "summary": "GetTodo RPC retrieves a single Todo object based on its ID.",
        "operationId": "TodoService_GetTodo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTodoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TodoService"
        ]
      },
      "delete": {
        "summary": "The DeleteTodo RPC deletes a Todo object based on its ID.",
        "operationId": "TodoService_DeleteTodo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TodoService"
        ]
      },
      "put": {
        "summary": "UpdateTodo RPC updates an existing Todo object.",
        "operationId": "TodoService_UpdateTodo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateTodoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TodoServiceUpdateTodoBody"
            }
          }
        ],
        "tags": [
          "TodoService"
        ]
      }
    }
  },
  "definitions": {
    "TodoServiceUpdateTodoBody": {
      "type": "object",
      "properties": {
        "payload": {
          "$ref": "#/definitions/v1Todo"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CreateTodoRequest": {
      "type": "object",
      "properties": {
        "todo": {
          "$ref": "#/definitions/v1Todo"
        }
      }
    },
    "v1CreateTodoResponse": {
      "type": "object",
      "properties": {
        "todo": {
          "$ref": "#/definitions/v1Todo"
        }
      }
    },
    "v1GetTodoResponse": {
      "type": "object",
      "properties": {
        "todo": {
          "$ref": "#/definitions/v1Todo"
        }
      }
    },
    "v1ListTodoResponse": {
      "type": "object",
      "properties": {
        "todos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Todo"
          }
        }
      }
    },
    "v1Todo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "uuid uniquely represents any Todo object in the storage. The value of\nid will be generated by the system while the todo is being crated."
        },
        "name": {
          "type": "string",
          "description": "User provided display name of the todo."
        },
        "description": {
          "type": "string"
        },
        "priority": {
          "type": "string",
          "description": "User defined priority of the TODO, can only be set a string value of P(0-4)."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp, represents when the entry is being created by the user."
        },
        "deadline": {
          "type": "string",
          "description": "User defined deadline specified in duration, indicates the time by when the task\nshould be completed."
        },
        "status": {
          "$ref": "#/definitions/v1TodoStatus",
          "description": "Status of the todo."
        }
      },
      "description": "Todo message represents a Todo object."
    },
    "v1TodoStatus": {
      "type": "string",
      "enum": [
        "TODO_STATUS_UNSPECIFIED",
        "TODO_STATUS_PENDING",
        "TODO_STATUS_IN_PROGRESS",
        "TODO_STATUS_DONE",
        "TODO_STATUS_DELETED",
        "TODO_STATUS_ABANDONED"
      ],
      "default": "TODO_STATUS_UNSPECIFIED",
      "description": "TodoStatus enum defines the possible states of a Todo object."
    },
    "v1UpdateTodoResponse": {
      "type": "object",
      "properties": {
        "todo": {
          "$ref": "#/definitions/v1Todo"
        }
      }
    }
  },
  "externalDocs": {
    "url": "https://github.com/sadlil/samples/tree/main/crud"
  }
}
